//
//  main.c
//  PG5_102062210
//
//  Created by Hsieh Yu Hua on 2013/11/29.
//  Copyright (c) 2013å¹´ Hsieh Yu Hua_NTHU_s102062210. All rights reserved.
//

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int compiler();
void calculator();

/*sub_function of compiler*/
void trim(char *output);
void print_out(char *output,FILE *f_out);
 

int main(int argc, const char * argv[])
{
    int door;
    if (scanf("%d",&door)==1)
    {
        if (door==1)
        {
            compiler();
        }
        else if (door==2)
        {
            calculator();
        }
        else printf("input error");
    }
    return 0;
}

int compiler()
{
    int i=0;
    char buffer[10][20]={0};
    char output[200]={0};
    FILE *fp,*f_out;
    fp=fopen("/Users/Andy/Downloads/PG5_testcase-1/input1.txt", "rt");
    
    //load every line to buffer[10][10],and if there is an illegal condition,end program;
    while(fgets(buffer[i], 14, fp))
    {
        int buffer_long=(int)strlen(buffer[i]);
        /*size is wrong */
        if (buffer_long!=9&&buffer_long!=13&&buffer_long!=11)
        {
            printf("ERROR:LINE %d",(i+1));
            return 0;
        }
        /*the last word is not ;*/
        if (buffer_long==9)
        {
            if (buffer[i][6]!=';')
            {
                printf("ERROR:LINE %d",(i+1));
                return 0;
            }
        }
        else if(buffer_long==13||buffer_long==11)
        {
            if (buffer[i][10]!=';') {
                printf("ERROR:LINE %d",(i+1));
                return 0;
            }
        }
        //search the string, if there is any illegal char in the string, print error.
        for (int j=0; j<buffer_long; j++)
        {
            /* operand shall be at the right places*/
            if (j==0||j==4||j==8)
            {
                switch (buffer[i][j]) {
                    case '1':
                        break;
                    case '2':
                        break;
                    case '3':
                        break;
                    case '4':
                        break;
                    case '5':
                        break;
                    case '6':
                        break;
                    case '7':
                        break;
                    case '8':
                        break;
                    case '9':
                        break;
                    default:
                        if (buffer_long>9) {
                            printf("ERROR:LINE %d",(i+1));
                            return 0;
                            break;
                        }
            }
            }
            /* operator shall be at the right places*/
            if (j==2||j==6)
            {
                switch (buffer[i][j])
                {
                    case '+':
                        break;
                    case '-':
                        break;
                    case '*':
                        break;
                    case '/':
                        break;
                    case ';':
                        break;
                    default:
                        printf("ERROR:LINE %d",(i+1));
                        return 0;
                        break;
                }
            }
        }
        i++;
    }
    fclose(fp);
    
    //to combine all the string in different buffer .
    for (int j = 0; j<i; j++)
    {
        strcat(output,buffer[j]);
    }
    //trim the /r/n' '
    trim(output);
    
    //print out as hex.
    f_out=fopen("/Users/Andy/Downloads/PG5_testcase-1/output1.bin", "wb");
    print_out(output,f_out);
    return 0;
    
}

//trim the /r/n' '
void trim(char *output)
{
    char buffer[200]={0};
    int j=0;
    for (int i=0; i<strlen(output); i++)
    {
        if (output[i]==' '||output[i]==10||output[i]==13)
        {
            continue;
        }
        else
        {
            buffer[j]=output[i];
            j++;
        }
    }
    for (int i=0; i<=j; i++) {
        output[i]=buffer[i];
    }
}

void print_out(char *output,FILE *f_out)
{
    int output_longness=(int)strlen(output);
    for (int i=0; i<output_longness; i++)
    {
        switch (output[i]) {
            case '0':
                fputs("00", f_out);
                break;
            case '1':
                fputs("01", f_out);
                break;
            case '2':
                fputs("02", f_out);
                break;
            case '3':
                fputs("03", f_out);
                break;
            case '4':
                fputs("04", f_out);
                break;
            case '5':
                fputs("05", f_out);
                break;
            case '6':
                fputs("06", f_out);
                break;
            case '7':
                fputs("07", f_out);
                break;
            case '8':
                fputs("08", f_out);
                break;
            case '9':
                fputs("09", f_out);
                break;
            case '+':
                fputs("0A", f_out);
                break;
            case '-':
                fputs("0B", f_out);
                break;
            case '*':
                fputs("0C", f_out);
                break;
            case '/':
                fputs("0D", f_out);
                break;
            case ';':
                fputs("0E", f_out);
                break;
            default:
                break;
        }
    }
    
}

void calculator()
{
    FILE *fp;
    char buffer[100];
    char output[10][20];
    int buffer_long;
    fp=fopen("/Users/Andy/Downloads/PG5_testcase-1/output1.bin", "rb");
    //store the data into buffer
    fscanf(fp, "%s",buffer);
    
    buffer_long=(int)strlen(buffer);
    //split the data by 0E
    int j=0;//output[j][k]
    for (int i=0,k=0; i<buffer_long; i++)
    {
        while (buffer[i]!='E')
        {
            output[j][k]=buffer[i];
            k++;
        }
        output[j][k+1]='\0';
        j++;
    }
    for (int i=0; i<j; i++) {
        printf("%s",output[j]);
    }

}





